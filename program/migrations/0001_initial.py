# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-02-18 23:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('proposals', '0005_auto_20180117_2017'),
    ]

    operations = [
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_span', models.IntegerField(choices=[(1, 'Slot spans only one track'), (2, 'Slot spans all tracks')], help_text='Does the slot span one track or all tracks (like keynote talks and breaks)')),
                ('name', models.CharField(blank=True, help_text="The name of the slot. Only necessary if it's a generic slot and no talks are asigned to it. If a slot is associated with a talk, a talk info will be shown", max_length=255, null=True)),
                ('start_time', models.DateTimeField(help_text='The start time of the slot')),
                ('length', models.IntegerField(help_text='Length of the slot in minutes')),
                ('parent_slot', models.ForeignKey(help_text='A slot can be nested inside another slot. If this is the case, connect it here', null=True, on_delete=django.db.models.deletion.SET_NULL, to='program.Slot')),
                ('talk', models.OneToOneField(help_text="If it's a slot for a talk, select your talk here.", null=True, on_delete=django.db.models.deletion.SET_NULL, to='proposals.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name of a track', max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='slot',
            name='track',
            field=models.ForeignKey(help_text='The track to which the slot belongs', on_delete=django.db.models.deletion.CASCADE, to='program.Track'),
        ),
    ]
